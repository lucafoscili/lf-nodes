name: Publish to Comfy registry
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master
    paths:
      - 'pyproject.toml'

permissions:
  issues: write
  contents: write

jobs:
  publish-node:
    name: Publish Custom Node to registry
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'lucafoscili' }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Fetch all history and branches
        run: |
          git fetch --unshallow
          git fetch --all --tags
      - name: Get Previous Tag
        id: previous_tag
        run: |
          # Resolve the most recent tag that precedes the commit we are about to release.
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          echo "previous_tag=$PREVIOUS_TAG" >> $GITHUB_OUTPUT
      - name: Publish Custom Node
        uses: Comfy-Org/publish-node-action@v1
        with:
          ## Add your own personal access token to your Github Repository secrets and reference it here.
          personal_access_token: ${{ secrets.REGISTRY_ACCESS_TOKEN }}
      - name: Install TOML Parser
        run: pip install tomli
      - name: Extract Version from pyproject.toml
        id: extract_version
        run: |
          VERSION=$(python3 -c "import tomli; data = tomli.load(open('pyproject.toml', 'rb')); print(data['project']['version'])")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Check if Tag Exists
        id: check_tag
        run: |
          TAG_NAME="v${{ steps.extract_version.outputs.version }}"
          if git rev-parse --verify "$TAG_NAME" >/dev/null 2>&1; then
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi
      - name: Generate Release Notes from Commits
        if: steps.check_tag.outputs.tag_exists == 'false'
        id: generate_notes
        run: |
          PREV_TAG='${{ steps.previous_tag.outputs.previous_tag }}'
          CURRENT_REF='${{ github.sha }}'
          RANGE=''
          if [ -n "$PREV_TAG" ]; then
            RANGE="$PREV_TAG..$CURRENT_REF"
          fi

          COMMITS=$(git log --pretty=format:"- %h %s" $RANGE)
          if [ -z "$COMMITS" ]; then
            COMMITS="(no commits detected between $PREV_TAG and $CURRENT_REF)"
          fi
          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Create and Push Tag
        if: steps.check_tag.outputs.tag_exists == 'false'
        run: |
          TAG_NAME="v${{ steps.extract_version.outputs.version }}"
          git tag "$TAG_NAME"
          git push origin "$TAG_NAME"
      - name: Create GitHub Release
        if: steps.check_tag.outputs.tag_exists == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.extract_version.outputs.version }}
          name: v${{ steps.extract_version.outputs.version }}
          body: |
            Version: `${{ steps.extract_version.outputs.version }}`

            ## Commits

            ${{ steps.generate_notes.outputs.commits }}

            ## Install

            Install from the Comfy registry.
          prerelease: false
          generate_release_notes: false
